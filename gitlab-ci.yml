image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_IMAGE_NAME: "demo-service" # MODIFY THIS
  DOCKER_IMAGE_ TAG: "latest" # MODIFY THIS
  PORT: "3001" # MODIFY THIS
  DOCKER_DRIVER: "overlay2"
  DOCKER_IMAGE_FULL: "${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
  ENV_PATH: "${PROJECT_PATH}/.env"

stages:
  - build
  - deploy

build:
  stage: build
  script:
    - docker build --build-arg DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME --build-arg PORT=$PORT -t $DOCKER_IMAGE_NAME .
    - docker tag $DOCKER_IMAGE_NAME $DOCKER_IMAGE_FULL
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker push $DOCKER_IMAGE_FULL
  only:
    - master

deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  only:
    - master
  before_script:
    - apk update && apk add openssh-client bash
  script:
    # chạy ssh-agent tương ứng với Gitlab Runner hiện tại
    - eval $(ssh-agent -s)

    # thêm nội dung của biến SSH_PRIVATE_KEY vào agent store
    - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    
    # tạo folder ~/.ssh
    - mkdir -p ~/.ssh
    
    # Scan lấy SSH Host key cho địa chỉ IP server
    # Được kết quả bao nhiêu thì thêm vào file known_hosts
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
    
    # Sửa lại quyền của file known_hosts
    - chmod 644 ~/.ssh/known_hosts
    
    # Thực hiện SSH vào server, login vào Registry, chuyển tới folder project
    # Down project, pull image về, up project và xoá đi image cũ
    - >
      ssh $SSH_USER@$SSH_SERVER_IP
      "docker pull $DOCKER_IMAGE_FULL;
      docker stop $DOCKER_IMAGE_FULL;
      docker run --env-file $ENV_PATH -e PORT=$PORT -p $PORT:$PORT -d $DOCKER_IMAGE_FULL;
      docker image prune -f;"
